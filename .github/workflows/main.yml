name: Main CI

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  issues: write
  pull-requests: write

env:
  DATABASE_URL: mysql://some_db@localhost:3306/portfolcio?sslaccept=strict
  ADMIN_EMAIL: some@thing.com
  AUTH_SECRET: something
  GOOGLE_CLIENT_ID: something
  GOOGLE_CLIENT_SECRET: something
  GITHUB_CLIENT_ID: something
  GITHUB_CLIENT_SECRET: something
  SPOTIFY_CLIENT_ID: something
  SPOTIFY_CLIENT_SECRET: something
  SPOTIFY_REFRESH_TOKEN: something
  GITHUB_API_TOKEN: something

jobs:
  build:
    name: Build
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Format
        run: pnpm run format:check

      - name: Generate prisma schema
        run: pnpm exec prisma generate

      - name: Lint
        run: pnpm run lint

      - name: Typecheck
        run: pnpm typecheck

      - name: Build
        run: pnpm build

      - uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

  stats:
    if: ${{ success() }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Analyze bundle
        run: pnpm add -D gzip-size@6 mkdirp && node .github/report-bundle-size.js

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: bundle
          path: .next/analyze/__bundle_analysis.json

      - name: Download base branch bundle stats
        uses: dawidd6/action-download-artifact@v3
        if: success() && github.event.number
        with:
          workflow: main.yml
          branch: ${{ github.event.pull_request.base.ref }}
          path: .next/analyze/base

      - name: Compare with base branch bundle
        if: success() && github.event.number
        run: ls -laR .next/analyze/base && npx -p nextjs-bundle-analysis compare

      - name: Get comment body
        id: get-comment-body
        if: success() && github.event.number
        run: |
          body=$(cat .next/analyze/__bundle_analysis_comment.txt)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo ::set-output name=body::$body

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '<!-- __NEXTJS_BUNDLE_portfolio -->'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v3.1.0
        if: success() && github.event.number && steps.fc.outputs.comment-id == 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}

      - name: Update Comment
        uses: peter-evans/create-or-update-comment@v3.1.0
        if: success() && github.event.number && steps.fc.outputs.comment-id != 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
